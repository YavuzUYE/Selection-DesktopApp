/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proje;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BoxLayout;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JCheckBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.WindowConstants;

/**
 *
 * @author dell
 */
public class PartyIndependent extends javax.swing.JFrame {
    JFrame jf;
    JPanel jp; 
    JLabel label1;
    ArrayList<String> candi = new ArrayList<>();
    private JCheckBox boxes[];
    JCheckBox boxes1;
    /**
     * Creates new form PartyIndependent
     */
    
        

    /**
     * Creates new form PartyIndependent
     */
    public PartyIndependent(String paryName,ArrayList<String> arrs) throws FileNotFoundException {
        
        /*initComponents();
        setLocationRelativeTo(null);
        setResizable(false);*/
        readFile(candi , "candidates.txt"); /* boxes = new JCheckBox[candi.size()];
        for (int i = 0; i < candi.size(); i++)
        {
        createrCheckBox(i);
        if(boxes[i].isSelected()){
        System.out.println("afas");
        }
        }
        setTitle("Vlastna Pizza");
        setSize(480,320);
        setVisible(true);
        setResizable(true);
        getContentPane().setLayout(null);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        //JScrollPane scrollP = new JScrollPane(boxes1);
        //jf.add(scrollP,BorderLayout.NORTH);*/

            //getContentPane().add(scrollP,BorderLayout.NORTH);
            JFrame jFrame = new JFrame("Party Independent Voting");

            JPanel contentPane = new JPanel();
            JPanel listOfFiles = new JPanel();
            listOfFiles.setLayout(new BoxLayout(listOfFiles, BoxLayout.Y_AXIS));

               
            for (int i = 0; i < candi.size(); i++) {
            JCheckBox ch1 = new JCheckBox(candi.get(i));
            listOfFiles.add(ch1);
        }

            JLabel lbl = new JLabel("inside the scroll");


            JScrollPane jScrollPane = new JScrollPane(listOfFiles);
            jScrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
            jScrollPane.setPreferredSize(new Dimension (700, 700));
            contentPane.add(jScrollPane);
            jFrame.add(contentPane);

            jFrame.setSize(700, 700);
            jFrame.setLocationRelativeTo(null);
            jFrame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
            jFrame.setVisible(true);
            
 
    }
            /*public void createrCheckBox(int i)
        {
            boxes[i] = new JCheckBox();
            //proper locations will be solved later
            int t =25*i;
            boxes[i].setLocation(50,336+t); 
            boxes[i].setSize(100,50);
            boxes[i].setText(candi.get(i));
            boxes[i].setSelected(false);
            boxes[i].setVisible(true);
            
            boxes1=(JCheckBox) getContentPane().add(boxes[i]); 
            //getContentPane().add(boxes[i]);
            */

    private PartyIndependent() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }


    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(681, 1000));

        jButton1.setText("Vote");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Back");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(183, 183, 183)
                .addComponent(jButton1)
                .addGap(67, 67, 67)
                .addComponent(jButton2)
                .addContainerGap(313, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(697, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(48, 48, 48))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PartyIndependent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PartyIndependent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PartyIndependent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PartyIndependent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                String a ="a";
                 ArrayList<String> notes11=new ArrayList<String>();
                try {
                    new PartyIndependent(a,notes11).setVisible(true);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(PartyIndependent.class.getName()).log(Level.SEVERE, null, ex);
                }
                 new PartyIndependent().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    // End of variables declaration//GEN-END:variables


        private void readFile(ArrayList<String> candi, String candidatestxt) throws FileNotFoundException  {
        List<String> candidateList = new ArrayList<>(1000);
        Scanner fileInput = new Scanner(new File(candidatestxt));
        while (fileInput.hasNextLine()) {
            candidateList.add(fileInput.nextLine());
        }
        candi.addAll(candidateList);
    }
}
